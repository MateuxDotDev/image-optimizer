services:
  database:
    container_name: database
    image: postgres:16.3-alpine
    hostname: database
    env_file:
      - .database.env
    restart: unless-stopped
    volumes:
      - ../../database/initdb.sql:/docker-entrypoint-initdb.d/script.sql
      - ./database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  message-queue:
    image: rabbitmq:3.13-management-alpine
    container_name: message-queue
    hostname: message-queue
    env_file:
    - .message-queue.env
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  network:
    image: nginx:1.27.0-alpine
    container_name: network
    ports:
      - "80:80"
    volumes:
      - ../../network/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - tiny-img-service

  auth-service:
    image: mateuxlucax/tiny-img:auth-service-dev
    container_name: auth-service
    hostname: auth-service
    env_file:
      - .auth.env
    depends_on:
      database:
        condition: service_healthy
    platform: linux/x86_64

  tiny-img-service:
    image: mateuxlucax/tiny-img:tiny-img-service-dev
    container_name: tiny-img-service
    hostname: tiny-img-service
    env_file:
      - .tiny-img.env
    volumes:
      - ./tmp:/tmp/tiny-img
    depends_on:
      database:
        condition: service_healthy
      message-queue:
        condition: service_healthy
    platform: linux/x86_64

  notification-service:
    image: mateuxlucax/tiny-img:notification-service-dev
    container_name: notification-service
    hostname: notification-service
    env_file:
      - .notification.env
    depends_on:
      message-queue:
        condition: service_healthy
    platform: linux/x86_64

  ffmpeg-service:
    image: mateuxlucax/tiny-img:ffmpeg-service-dev
    container_name: ffmpeg-service
    hostname: ffmpeg-service
    env_file:
      - .ffmpeg.env
    depends_on:
      message-queue:
        condition: service_healthy
    volumes:
      - ./tmp:/tmp/tiny-img
    platform: linux/x86_64

  prometheus:
    image: prom/prometheus:v2.45.6
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=1y"
    ports:
      - "9090:9090"
    depends_on:
      - auth-service
      - tiny-img-service
      - notification-service
      - ffmpeg-service

  grafana:
    image: grafana/grafana-oss:10.3.7 
    container_name: grafana
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
